openapi: 3.1.0
info:
  title: suix_queryEvents
  version: 1.2.17
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        $ref: ../components/schemas/Network.yaml
components:
  securitySchemes:
    api_key:
      $ref: ../components/securitySchemes/X-API-KEY.yaml
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - suix_queryEvents
      description: |
        Return list of events for a specified query criteria.
      summary: suix_queryEvents
      operationId: sui-suix_queryEvents
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: "2.0"
                method:
                  type: string
                  default: suix_queryEvents
                params:
                  type: array
                  minItems: 1
                  maxItems: 4
                  items:
                    oneOf:
                      - title: query
                        $ref: "../components/schemas/EventFilter.yaml"
                        description: The event query criteria. See Event filter documentation for examples.
                      - title: cursor
                        $ref: "../components/schemas/EventID.yaml"
                        description: Optional paging cursor
                      - title: limit
                        type: integer
                        description: Maximum number of items per page, default to [QUERY_MAX_RESULT_LIMIT] if not specified.
                      - title: descending_order
                        type: boolean
                        description: Query result ordering, default to false (ascending order), oldest record first.
              example:
                {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "method": "suix_queryEvents",
                  "params":
                    [
                      {
                        "MoveModule":
                          {
                            "package": "0xa395759ca37c6e1ffc179184e98a6f9a2da5d78f6e34b0e5044ed52a6bc0a1bc",
                            "module": "test",
                          },
                      },
                      {
                        "txDigest": "Eg3ynETJfTfPKyvJzq3VLG6MngURYHPMjjUJ3Xt1t7tf",
                        "eventSeq": "1",
                      },
                      100,
                      false,
                    ],
                }
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    $ref: "../components/schemas/Page_for_Event_and_EventID.yaml"
              example:
                $ref: "../components/examples/suix_queryEvents.json"
        "400":
          $ref: "../components/responses/400.yaml"
        "401":
          $ref: "../components/responses/401.yaml"
        "403":
          $ref: "../components/responses/403.yaml"
        "404":
          $ref: "../components/responses/404.yaml"
        "429":
          $ref: "../components/responses/429.yaml"
