openapi: 3.1.0
info:
  title: solana-getTokenSupply
  version: 1.2.15
servers:
  - url: https://{solana-network}.nodit.io
    variables:
      solana-network:
        description: The network to use for the API.
        enum:
          - solana-devnet
        default: solana-devnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - solana-http-method-getTokenSupply
      description: |
        Returns the total supply of an SPL Token type.
      summary: getTokenSupply
      operationId: solana-getTokenSupply
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - id
                - method
                - params
              properties:
                jsonrpc:
                  type: string
                  default: '2.0'
                id:
                  type: integer
                  default: 1
                method:
                  type: string
                  default: getTokenSupply
                params:
                  type: array
                  minItems: 1
                  maxItems: 2
                  description: |
                    It contains following items:
                    1. Pubkey of the token Mint (`required`)
                    2. ConfigurationObject (`optional`)
                  items:
                    oneOf:
                      - title: Pubkey of the token Mint
                        type: string
                        description: Pubkey of the token Mint to query, as base-58 encoded string
                      - title: Configuration Object
                        type: object
                        properties:
                          commitment:
                            $ref: '#/components/schemas/Commitment'
              example:
                jsonrpc: '2.0'
                id: 1
                method: getTokenSupply
                params:
                  - 3wyAj7Rt1TWVPZVteFJPLa26JmLvdb1CAKEFZm3NY75E
                  - commitment: finalized
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          context:
                            $ref: '#/components/schemas/Context'
                          value:
                            type: object
                            properties:
                              amount:
                                type: string
                                description: The raw amount without decimals, a string representation of u64
                              decimals:
                                type: number
                                description: Number of base 10 digits to the right of the decimal place
                              uiAmount:
                                type: number
                                description: The total token supply, using mint-prescribed decimals
                              uiAmountString:
                                type: string
                                description: The total token supply as a string, using mint-prescribed decimals
                example:
                  jsonrpc: '2.0'
                  result:
                    context:
                      slot: 1114
                    value:
                      amount: '100000'
                      decimals: 2
                      uiAmount: 1000
                      uiAmountString: '1000'
                  id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    Commitment:
      type: string
      description: |
        The commitment describes how finalized a block is at that point in time.
        - finalized - the node will query the most recent block confirmed by supermajority of the cluster as having reached maximum lockout, meaning the cluster has recognized this block as finalized
        - confirmed - the node will query the most recent block that has been voted on by supermajority of the cluster.
        - processed - the node will query its most recent block. Note that the block may still be skipped by the cluster.
      enum:
        - processed
        - confirmed
        - finalized
    SuccessfulResponse:
      type: object
      properties:
        id:
          type: integer
          description: The request ID
        jsonrpc:
          type: string
          description: The JSON-RPC version
    Context:
      type: object
      description: An object containing metadata about the current state of the Solana network at the time of the request.
      properties:
        apiVersion:
          type: string
          description: The API version used for the request
        slot:
          type: integer
          description: The slot number at which the request was evaluated
    ErrorFromRPC:
      type: object
      properties:
        code:
          type: integer
          description: Returns a code that identifies the situation where the error occurred.
          example: -32602
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                description: JSON-RPC version
                example: '2.0'
              id:
                type: integer
                description: Request ID
                example: 1
              error:
                $ref: '#/components/schemas/ErrorFromRPC'
            required:
              - jsonrpc
              - id
              - error
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
