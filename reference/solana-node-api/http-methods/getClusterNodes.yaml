openapi: 3.1.0
info:
  title: solana-getClusterNodes
  version: 1.2.17
servers:
  - url: https://{solana-network}.nodit.io
    variables:
      solana-network:
        description: The network to use for the API.
        enum:
          - solana-mainnet
          - solana-devnet
        default: solana-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - solana-http-method-getClusterNodes
      description: |
        Returns information about all the nodes participating in the cluster
      summary: getClusterNodes
      operationId: solana-getClusterNodes
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jsonrpc
                - id
                - method
              properties:
                jsonrpc:
                  type: string
                  default: '2.0'
                id:
                  type: integer
                  default: 1
                method:
                  type: string
                  default: getClusterNodes
              example:
                jsonrpc: '2.0'
                id: 1
                method: getClusterNodes
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponse'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          type: object
                          properties:
                            featureSet:
                              type: integer
                              format: uint32
                              description: The unique identifier of the node's feature set
                            gossip:
                              type: string
                              description: Gossip network address for the node
                            pubkey:
                              type: string
                              description: Node public key, as base-58 encoded string
                            rpc:
                              type: string
                              description: JSON RPC network address for the node, or null if the JSON RPC service is not enabled
                            shredVersion:
                              type: integer
                              format: uint16
                              description: The shred version the node has been configured to use
                            tpu:
                              type: string
                              description: TPU network address for the node
                            version:
                              type: string
                              description: The software version of the node, or null if the version information is not available
                example:
                  jsonrpc: '2.0'
                  result:
                    - featureSet: 3073396398
                      gossip: 10.239.6.48:8001
                      pubkey: 9QzsJf7LPLj8GkXbYT3LFDKqsj2hHG7TA3xinJHu8epQ
                      rpc: 10.239.6.48:8899
                      shredVersion: 2405
                      tpu: 10.239.6.48:8856
                      version: 1.0.0 c375ce1f
                  id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    SuccessfulResponse:
      type: object
      properties:
        id:
          type: integer
          description: The request ID
        jsonrpc:
          type: string
          description: The JSON-RPC version
    ErrorFromRPC:
      type: object
      properties:
        code:
          type: integer
          description: Returns a code that identifies the situation where the error occurred.
          example: -32602
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                description: JSON-RPC version
                example: '2.0'
              id:
                type: integer
                description: Request ID
                example: 1
              error:
                $ref: '#/components/schemas/ErrorFromRPC'
            required:
              - jsonrpc
              - id
              - error
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
