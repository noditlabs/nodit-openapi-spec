openapi: 3.1.0
info:
  title: evm-polygon-eth_getTransactionReceipt
  version: 1.2.6
servers:
  - url: https://{polygon-network}.nodit.io
    variables:
      polygon-network:
        default: polygon-mainnet
        enum:
          - polygon-mainnet
          - polygon-amoy
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: >-
        The default value, `nodit-demo`, is only for use in the developer
        documentation. For real applications or services, use the API key
        obtained from the Nodit console.
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - evm-polygon-eth_getTransactionReceipt
      description: "트랜잭션 해시를 입력하여 해당 트랜잭션의 Receipt를 조회합니다.\n\t\t\t\t\t\n\n> 🚧 응답 시간이 오래 걸리나요? 트랜잭션 상태에 따라 응답 시간이 길어질 수 있습니다!\n>\n> 특정 트랜잭션의 정보를 조회할 때, 해당 트랜잭션에 포함된 이벤트 로그의 양, 블록 내 트랜잭션 순서 등에 따라 응답 시간이 길어질 수 있습니다.\n> 만약 빠른 응답을 원한다면 트랜잭션의 이벤트 로그를 제외하고 요청하세요.\n"
      summary: eth_getTransactionReceipt
      operationId: polygon-eth_getTransactionReceipt
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: eth_getTransactionReceipt
                params:
                  type: array
                  items:
                    oneOf:
                      - title: Transaction Hash
                        type: string
                        pattern: ^0[xX][0-9a-fA-F]{64}
                        default: >-
                          0xda148d856aef6d77d0b76c90ef1091ffe77afe9ee9b1c6cc23f28f042f198bd8
                        description: >-
                          트랜잭션 해시는 트랜잭션의 고유 식별자입니다. 트랜잭션 해시는 64자리 16진수 문자열로
                          표현됩니다.
                  minItems: 1
                  maxItems: 1
                  default:
                    - >-
                      0xda148d856aef6d77d0b76c90ef1091ffe77afe9ee9b1c6cc23f28f042f198bd8
                  description: |-
                    다음 파라미터들을 타입에 맞게 배열로 입력합니다.
                    1. `transaction hash`: 조회하고자 하는 트랜잭션 해시를 문자열 형식으로 입력합니다.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                jsonrpc: '2.0'
                id: 1
                result:
                  blockHash: >-
                    0x7ce837c7672f469b85b0fbad0d1cc650a37e955efa43c018efb2f8624af6a772
                  blockNumber: '0x1076b5f'
                  contractAddress: null
                  cumulativeGasUsed: '0x125392e'
                  effectiveGasPrice: '0xa44661dc3'
                  from: '0x1f9090aae28b8a3dceadf281b0f12828e676c326'
                  gasUsed: '0x565f'
                  logs:
                    - address: '0x388c818ca8b9251b393131c08a736a67ccb19297'
                      topics:
                        - >-
                          0x27f12abfe35860a9a927b465bb3d4a9c23c8428174b83f278fe45ed7b4da2662
                      data: >-
                        0x00000000000000000000000000000000000000000000000001162a2c94f37cd6
                      blockNumber: '0x1076b5f'
                      transactionHash: >-
                        0xda148d856aef6d77d0b76c90ef1091ffe77afe9ee9b1c6cc23f28f042f198bd8
                      transactionIndex: '0xd7'
                      blockHash: >-
                        0x7ce837c7672f469b85b0fbad0d1cc650a37e955efa43c018efb2f8624af6a772
                      logIndex: '0x21d'
                      removed: false
                  logsBloom: >-
                    0x
                  status: '0x1'
                  to: '0x388c818ca8b9251b393131c08a736a67ccb19297'
                  transactionHash: >-
                    0xda148d856aef6d77d0b76c90ef1091ffe77afe9ee9b1c6cc23f28f042f198bd8
                  transactionIndex: '0xd7'
                  type: '0x2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                    description: >-
                      These codes provide more granular error information beyond
                      just the HTTP status code of the response.


                      Allowed values: account_not_found, resource_not_found,
                      module_not_found, struct_field_not_found,
                      version_not_found, transaction_not_found,
                      table_item_not_found, block_not_found,
                      state_value_not_found, version_pruned, block_pruned,
                      invalid_input, invalid_transaction_update,
                      sequence_number_too_old, vm_error, health_check_failed,
                      mempool_is_full, internal_error, web_framework_error,
                      bcs_not_supported, api_disabled
                  vm_error_code:
                    type: integer
                    description: >-
                      A code providing VM error details when submitting
                      transactions to the VM.
