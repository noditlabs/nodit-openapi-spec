openapi: 3.1.0
info:
  title: suix_getDynamicFieldObject
  version: 1.2.17
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        description: The network to use for the API.
        enum:
          - sui-mainnet
        default: sui-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - suix_getDynamicFieldObject
      description: |
        Return the dynamic field object information for a specified object
      summary: suix_getDynamicFieldObject
      operationId: sui-suix_getDynamicFieldObject
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: suix_getDynamicFieldObject
                params:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    oneOf:
                      - title: parent_object_id
                        $ref: '#/components/schemas/ObjectID'
                        description: The ID of the queried parent object
                      - title: name
                        $ref: '#/components/schemas/DynamicFieldName'
                        description: The Name of the dynamic field
              example:
                jsonrpc: '2.0'
                id: 1
                method: suix_getDynamicFieldObject
                params:
                  - '0x3ddea0f8c3da994d9ead562ce76e36fdef6a382da344930c73d1298b0e9644b8'
                  - type: 0x0000000000000000000000000000000000000000000000000000000000000009::test::TestField
                    value: some_value
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    $ref: '#/components/schemas/SuiObjectResponse'
                    description: The response from the dynamic field object query
              example:
                jsonrpc: '2.0'
                result:
                  data:
                    objectId: '0x3ddea0f8c3da994d9ead562ce76e36fdef6a382da344930c73d1298b0e9644b8'
                    version: '1'
                    digest: Faiv4yqGR4HjAW8WhMN1NHHNStxXgP3u22dVPyvLad2z
                    type: 0x0000000000000000000000000000000000000000000000000000000000000009::test::TestField
                    owner:
                      AddressOwner: '0x5ea6f7a348f4a7bd1a9ab069eb7f63865de3075cc5a4e62432f634b50fd2bb2b'
                    previousTransaction: 5qTpesGST3v9NmMTkzV7HHNZRJh52BSqUTErc6L6XGm
                    storageRebate: '100'
                    content:
                      dataType: moveObject
                      type: 0x0000000000000000000000000000000000000000000000000000000000000009::test::TestField
                      hasPublicTransfer: true
                      fields: {}
                id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    Hex:
      description: Hex string encoding.
      type: string
    ObjectID:
      allOf:
        - $ref: '#/components/schemas/Hex'
    DynamicFieldName:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
        value:
          type: boolean
    Base64:
      description: Base64 encoding
      type: string
    BigInt_for_uint64:
      type: string
    UpgradeInfo:
      description: Upgraded package info for the linkage table
      type: object
      required:
        - upgraded_id
        - upgraded_version
      properties:
        upgraded_id:
          allOf:
            - $ref: '#/components/schemas/ObjectID'
          description: ID of the upgraded packages
        upgraded_version:
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
          description: Version of the upgraded package
    TypeOrigin:
      description: Identifies a struct and the module it was defined in
      type: object
      required:
        - datatype_name
        - module_name
        - package
      properties:
        datatype_name:
          type: string
        module_name:
          type: string
        package:
          $ref: '#/components/schemas/ObjectID'
    RawData:
      oneOf:
        - type: object
          required:
            - bcsBytes
            - dataType
            - hasPublicTransfer
            - type
            - version
          properties:
            bcsBytes:
              $ref: '#/components/schemas/Base64'
            dataType:
              type: string
              enum:
                - moveObject
            hasPublicTransfer:
              type: boolean
            type:
              type: string
            version:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - dataType
            - id
            - linkageTable
            - moduleMap
            - typeOriginTable
            - version
          properties:
            dataType:
              type: string
              enum:
                - package
            id:
              $ref: '#/components/schemas/ObjectID'
            linkageTable:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/UpgradeInfo'
            moduleMap:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Base64'
            typeOriginTable:
              type: array
              items:
                $ref: '#/components/schemas/TypeOrigin'
            version:
              $ref: '#/components/schemas/BigInt_for_uint64'
    SuiAddress:
      allOf:
        - $ref: '#/components/schemas/Hex'
    MoveValue:
      anyOf:
        - type: integer
          format: uint32
          minimum: 0
        - type: boolean
        - $ref: '#/components/schemas/SuiAddress'
        - type: array
          items:
            $ref: '#/components/schemas/MoveValue'
        - type: string
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/ObjectID'
        - $ref: '#/components/schemas/MoveStruct'
        - $ref: '#/components/schemas/MoveValue'
        - $ref: '#/components/schemas/MoveVariant'
    MoveStruct:
      anyOf:
        - type: array
          items:
            $ref: '#/components/schemas/MoveValue'
        - type: object
          required:
            - fields
            - type
          properties:
            fields:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/MoveValue'
            type:
              type: string
        - type: object
          additionalProperties:
            $ref: '#/components/schemas/MoveValue'
    MoveVariant:
      type: object
      required:
        - fields
        - type
        - variant
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MoveValue'
        type:
          type: string
        variant:
          type: string
    Data:
      oneOf:
        - type: object
          required:
            - dataType
            - fields
            - hasPublicTransfer
            - type
          properties:
            dataType:
              type: string
              enum:
                - moveObject
            fields:
              $ref: '#/components/schemas/MoveStruct'
            hasPublicTransfer:
              type: boolean
            type:
              type: string
        - type: object
          required:
            - dataType
            - disassembled
          properties:
            dataType:
              type: string
              enum:
                - package
            disassembled:
              type: object
              additionalProperties: true
    Base58:
      type: string
    Digest:
      allOf:
        - $ref: '#/components/schemas/Base58'
      description: A representation of a 32 byte digest
    ObjectResponseError:
      oneOf:
        - type: object
          required:
            - code
            - object_id
          properties:
            code:
              type: string
              enum:
                - notExists
            object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - parent_object_id
          properties:
            code:
              type: string
              enum:
                - dynamicFieldNotFound
            parent_object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - digest
            - object_id
            - version
          properties:
            code:
              type: string
              enum:
                - deleted
            digest:
              description: Base64 string representing the object digest
              allOf:
                - $ref: '#/components/schemas/Digest'
            object_id:
              $ref: '#/components/schemas/ObjectID'
            version:
              description: Object version.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - unknown
        - type: object
          required:
            - code
            - error
          properties:
            code:
              type: string
              enum:
                - displayError
            error:
              type: string
    DisplayFieldsResponse:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        error:
          $ref: '#/components/schemas/ObjectResponseError'
    Owner:
      oneOf:
        - description: Object is exclusively owned by a single address, and is mutable.
          type: object
          required:
            - AddressOwner
          properties:
            AddressOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is exclusively owned by a single object, and is mutable. The object ID is converted to SuiAddress as SuiAddress is universal.
          type: object
          required:
            - ObjectOwner
          properties:
            ObjectOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is shared, can be used by any address, and is mutable.
          type: object
          required:
            - Shared
          properties:
            Shared:
              type: object
              required:
                - initial_shared_version
              properties:
                initial_shared_version:
                  description: The version at which the object became shared
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
        - description: Object is immutable, and hence ownership doesn't matter.
          type: string
          enum:
            - Immutable
        - description: Object is exclusively owned by a single address and sequenced via consensus.
          type: object
          required:
            - ConsensusAddressOwner
          properties:
            ConsensusAddressOwner:
              type: object
              required:
                - owner
                - start_version
              properties:
                owner:
                  $ref: '#/components/schemas/SuiAddress'
                start_version:
                  description: The version at which the object most recently became a consensus object. This serves the same function as `initial_shared_version`, except it may change if the object's Owner type changes.
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
    TransactionDigest:
      allOf:
        - $ref: '#/components/schemas/Digest'
      description: A transaction will have a (unique) digest.
    SequenceNumber:
      type: integer
      format: uint64
      minimum: 0
    ObjectData:
      type: object
      required:
        - digest
        - objectId
        - version
      properties:
        bcs:
          description: Move object content or package content in BCS, default to be None unless SuiObjectDataOptions.showBcs is set to true
          $ref: '#/components/schemas/RawData'
        content:
          description: Move object content or package content, default to be None unless SuiObjectDataOptions.showContent is set to true
          $ref: '#/components/schemas/Data'
        digest:
          description: Base64 string representing the object digest
          allOf:
            - $ref: '#/components/schemas/Digest'
        display:
          description: The Display metadata for frontend UI rendering, default to be None unless SuiObjectDataOptions.showContent is set to true This can also be None if the struct type does not have Display defined See more details in <https://forums.sui.io/t/nft-object-display-proposal/4872>
          $ref: '#/components/schemas/DisplayFieldsResponse'
        objectId:
          $ref: '#/components/schemas/ObjectID'
        owner:
          description: The owner of this object. Default to be None unless SuiObjectDataOptions.showOwner is set to true
          $ref: '#/components/schemas/Owner'
        previousTransaction:
          description: The digest of the transaction that created or last mutated this object. Default to be None unless SuiObjectDataOptions.showPreviousTransaction is set to true
          $ref: '#/components/schemas/TransactionDigest'
        storageRebate:
          description: The amount of SUI we would rebate if this object gets deleted. This number is re-calculated each time the object is mutated based on the present storage gas price.
          $ref: '#/components/schemas/BigInt_for_uint64'
        type:
          description: The type of the object. Default to be None unless SuiObjectDataOptions.showType is set to true
          type: string
        version:
          description: Object version.
          allOf:
            - $ref: '#/components/schemas/SequenceNumber'
    SuiObjectResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ObjectData'
        error:
          $ref: '#/components/schemas/ObjectResponseError'
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                description: JSON-RPC version
                example: '2.0'
              id:
                type: integer
                description: Request ID
                example: 1
              error:
                $ref: '#/components/schemas/ObjectResponseError'
            required:
              - jsonrpc
              - id
              - error
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
