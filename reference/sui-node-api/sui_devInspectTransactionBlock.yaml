openapi: 3.1.0
info:
  title: sui_devInspectTransactionBlock
  version: 1.2.17
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        description: The network to use for the API.
        enum:
          - sui-mainnet
        default: sui-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - sui_devInspectTransactionBlock
      description: |
        Runs the transaction in dev-inspect mode. Which allows for nearly any transaction (or Move call) with any arguments. Detailed results are provided, including both the transaction effects and any return values.
      summary: sui_devInspectTransactionBlock
      operationId: sui-sui_devInspectTransactionBlock
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: sui_devInspectTransactionBlock
                params:
                  type: array
                  minItems: 2
                  maxItems: 5
                  items:
                    oneOf:
                      - title: sender_address
                        $ref: '#/components/schemas/SuiAddress'
                      - title: tx_bytes
                        $ref: '#/components/schemas/TxBytes'
                        description: BCS encoded TransactionKind(as opposed to TransactionData, which include gasBudget and gasPrice)
                      - title: gas_price
                        $ref: '#/components/schemas/SequenceNumber'
                        description: Gas is not charged, but gas usage is still calculated. Default to use reference gas price
                      - title: epoch
                        $ref: '#/components/schemas/SequenceNumber'
                        description: The epoch to perform the call. Will be set from the system state object if not provided
                      - title: additional_args
                        $ref: '#/components/schemas/DevInspectArgs'
                        description: Additional arguments including gas_budget, gas_objects, gas_sponsor and skip_checks.
              example:
                jsonrpc: '2.0'
                id: 1
                method: sui_devInspectTransactionBlock
                params:
                  - '0xd70420418b84502e506794227f897237764dde8d79a01ab2104bf742a277a2ab'
                  - AAACACBnxtMcbJcOVn8D72fYEaT4Q2ZbjePygvpIs+AQO6m77QEAagYVO5/EhuEB8OnicDrIZm0GrsxN3355JqNhlwxlpbECAAAAAAAAACDoQ3EipycU+/EOvBcDPFtMkZiSbdzWAw3CwdmQCAtBWAEBAQEBAAEAAC9cVD1xauQ9RT3rOxmbva8bxwMMdoL4dwPc5DEkj+3gASxDgF0Nb1QCp60Npb3sVJx83qBrxKHTOaIlIe6pM7iJAgAAAAAAAAAgnvsgc1pPauyCE27/c+aBnHN3fSsxRAWdEJYzYFOryNAvXFQ9cWrkPUU96zsZm72vG8cDDHaC+HcD3OQxJI/t4AoAAAAAAAAAoIYBAAAAAAAA
                  - 1000
                  - 8888
                  - null
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  jsonrpc:
                    type: string
                  result:
                    $ref: '#/components/schemas/DevInspectResults'
              example:
                jsonrpc: '2.0'
                result:
                  effects:
                    messageVersion: v1
                    status:
                      status: success
                    executedEpoch: '0'
                    gasUsed:
                      computationCost: '100'
                      storageCost: '100'
                      storageRebate: '10'
                      nonRefundableStorageFee: '0'
                    transactionDigest: 76gyHCk7FRrGACRqXM7Ybj5uJLtAzgEMJ5P9CeEzxZSG
                    mutated:
                      - owner:
                          AddressOwner: '0x2f5c543d716ae43d453deb3b199bbdaf1bc7030c7682f87703dce431248fede0'
                        reference:
                          objectId: '0x2c43805d0d6f5402a7ad0da5bdec549c7cdea06bc4a1d339a22521eea933b889'
                          version: 2
                          digest: BhbWpBeESxuRWvmvLMyb2JNUuFa6j4aG1T4WUiPgKAHm
                      - owner:
                          AddressOwner: '0x67c6d31c6c970e567f03ef67d811a4f843665b8de3f282fa48b3e0103ba9bbed'
                        reference:
                          objectId: '0x6a06153b9fc486e101f0e9e2703ac8666d06aecc4ddf7e7926a361970c65a5b1'
                          version: 2
                          digest: GdfET1avZReDftpJNB8LSuHJ2cKUheSbEaLMzuPVXHsM
                    gasObject:
                      owner:
                        ObjectOwner: '0x2f5c543d716ae43d453deb3b199bbdaf1bc7030c7682f87703dce431248fede0'
                      reference:
                        objectId: '0x2c43805d0d6f5402a7ad0da5bdec549c7cdea06bc4a1d339a22521eea933b889'
                        version: 2
                        digest: BhbWpBeESxuRWvmvLMyb2JNUuFa6j4aG1T4WUiPgKAHm
                    eventsDigest: 6kerMphN4S5QTfd9TAhwMiFq1q9c2YwfpheBfWm85vUq
                  events: []
                id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    Hex:
      description: Hex string encoding.
      type: string
    SuiAddress:
      allOf:
        - $ref: '#/components/schemas/Hex'
    TxBytes:
      type: string
      description: BCS serialized transaction data bytes without its type tag, as base-64 encoded string.
    SequenceNumber:
      type: integer
      format: uint64
      minimum: 0
    BigInt_for_uint64:
      type: string
    Base58:
      type: string
    Digest:
      allOf:
        - $ref: '#/components/schemas/Base58'
      description: A representation of a 32 byte digest
    ObjectID:
      allOf:
        - $ref: '#/components/schemas/Hex'
    ObjectRef:
      type: object
      required:
        - digest
        - objectId
        - version
      properties:
        digest:
          description: Base64 string representing the object digest
          allOf:
            - $ref: '#/components/schemas/Digest'
        objectId:
          description: Hex code as string representing the object id
          allOf:
            - $ref: '#/components/schemas/ObjectID'
        version:
          description: Object version.
          allOf:
            - $ref: '#/components/schemas/SequenceNumber'
    DevInspectArgs:
      description: Additional rguments supplied to dev inspect beyond what is allowed in today's API.
      type: object
      properties:
        gasBudget:
          $ref: '#/components/schemas/BigInt_for_uint64'
          description: The gas budget for the transaction.
        gasObjects:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
          description: The gas objects used to pay for the transaction.
        gasSponsor:
          $ref: '#/components/schemas/SuiAddress'
          description: The sponsor of the gas for the transaction, might be different from the sender.
        showRawTxnDataAndEffects:
          type: boolean
          description: Whether to return the raw transaction data and effects.
        skipChecks:
          type: boolean
          description: Whether to skip transaction checks for the transaction.
    SuiMoveAbort:
      type: object
      properties:
        error_code:
          type:
            - integer
            - 'null'
          format: uint64
          minimum: 0
        function:
          type:
            - string
            - 'null'
        line:
          type:
            - integer
            - 'null'
          format: uint16
          minimum: 0
        module_id:
          type:
            - string
            - 'null'
    Owner:
      oneOf:
        - description: Object is exclusively owned by a single address, and is mutable.
          type: object
          required:
            - AddressOwner
          properties:
            AddressOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is exclusively owned by a single object, and is mutable. The object ID is converted to SuiAddress as SuiAddress is universal.
          type: object
          required:
            - ObjectOwner
          properties:
            ObjectOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is shared, can be used by any address, and is mutable.
          type: object
          required:
            - Shared
          properties:
            Shared:
              type: object
              required:
                - initial_shared_version
              properties:
                initial_shared_version:
                  description: The version at which the object became shared
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
        - description: Object is immutable, and hence ownership doesn't matter.
          type: string
          enum:
            - Immutable
        - description: Object is exclusively owned by a single address and sequenced via consensus.
          type: object
          required:
            - ConsensusAddressOwner
          properties:
            ConsensusAddressOwner:
              type: object
              required:
                - owner
                - start_version
              properties:
                owner:
                  $ref: '#/components/schemas/SuiAddress'
                start_version:
                  description: The version at which the object most recently became a consensus object. This serves the same function as `initial_shared_version`, except it may change if the object's Owner type changes.
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
    OwnedObjectRef:
      type: object
      required:
        - owner
        - reference
      properties:
        owner:
          $ref: '#/components/schemas/Owner'
        reference:
          $ref: '#/components/schemas/ObjectRef'
    TransactionDigest:
      allOf:
        - $ref: '#/components/schemas/Digest'
      description: A transaction will have a (unique) digest.
    GasCostSummary:
      description: |
        Summary of the charges in a transaction. Storage is charged independently of computation. There are 3 parts to the storage charges:
        `storage_cost`: it is the charge of storage at the time the transaction is executed. The cost of storage is the number of bytes of the objects being mutated multiplied by a variable storage cost per byte
        `storage_rebate`: this is the amount a user gets back when manipulating an object. The `storage_rebate` is the `storage_cost` for an object minus fees.
        `non_refundable_storage_fee`: not all the value of the object storage cost is given back to user and there is a small fraction that is kept by the system. This value tracks that charge.

        When looking at a gas cost summary the amount charged to the user is `computation_cost + storage_cost - storage_rebate` and that is the amount that is deducted from the gas coins. `non_refundable_storage_fee` is collected from the objects being mutated/deleted and it is tracked by the system in storage funds.

        Objects deleted, including the older versions of objects mutated, have the storage field on the objects added up to a pool of "potential rebate". This rebate then is reduced by the "nonrefundable rate" such that: `potential_rebate(storage cost of deleted/mutated objects) = storage_rebate + non_refundable_storage_fee`
      type: object
      required:
        - computationCost
        - nonRefundableStorageFee
        - storageCost
        - storageRebate
      properties:
        computationCost:
          description: Cost of computation/execution
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        nonRefundableStorageFee:
          description: The fee for the rebate. The portion of the storage rebate kept by the system.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageCost:
          description: Storage cost, it's the sum of all storage cost for all objects created or mutated.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageRebate:
          description: The amount of storage cost refunded to the user for all objects deleted or mutated in the transaction.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
    TransactionBlockEffectsModifiedAtVersions:
      type: object
      required:
        - objectId
        - sequenceNumber
      properties:
        objectId:
          $ref: '#/components/schemas/ObjectID'
        sequenceNumber:
          $ref: '#/components/schemas/SequenceNumber'
    ExecutionStatus:
      oneOf:
        - type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - success
        - type: object
          required:
            - error
            - status
          properties:
            error:
              type: string
            status:
              type: string
              enum:
                - failure
    TransactionBlockEffects:
      oneOf:
        - description: The response from processing a transaction or a certified transaction
          type: object
          required:
            - executedEpoch
            - gasObject
            - gasUsed
            - messageVersion
            - status
            - transactionDigest
          properties:
            abortError:
              description: The abort error populated if the transaction failed with an abort code.
              $ref: '#/components/schemas/SuiMoveAbort'
            created:
              description: ObjectRef and owner of new objects created.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            deleted:
              description: Object Refs of objects now deleted (the old refs).
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            dependencies:
              description: The set of transaction digests this transaction depends on.
              type: array
              items:
                $ref: '#/components/schemas/TransactionDigest'
            eventsDigest:
              description: The digest of the events emitted during execution, can be None if the transaction does not emit any event.
              $ref: '#/components/schemas/Digest'
            executedEpoch:
              description: The epoch when this transaction was executed.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
            gasObject:
              description: The updated gas object reference. Have a dedicated field for convenient access. It's also included in mutated.
              allOf:
                - $ref: '#/components/schemas/OwnedObjectRef'
            gasUsed:
              $ref: '#/components/schemas/GasCostSummary'
            messageVersion:
              type: string
              enum:
                - v1
            modifiedAtVersions:
              description: The version that every modified (mutated or deleted) object had before it was modified by this transaction.
              type: array
              items:
                $ref: '#/components/schemas/TransactionBlockEffectsModifiedAtVersions'
            mutated:
              description: ObjectRef and owner of mutated objects, including gas object.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            sharedObjects:
              description: The object references of the shared objects used in this transaction. Empty if no shared objects were used.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            status:
              description: The status of the execution
              allOf:
                - $ref: '#/components/schemas/ExecutionStatus'
            transactionDigest:
              description: The transaction digest
              allOf:
                - $ref: '#/components/schemas/TransactionDigest'
            unwrapped:
              description: ObjectRef and owner of objects that are unwrapped in this transaction. Unwrapped objects are objects that were wrapped into other objects in the past, and just got extracted out.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            unwrappedThenDeleted:
              description: Object refs of objects previously wrapped in other objects but now deleted.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            wrapped:
              description: Object refs of objects now wrapped in other objects.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
    DevInspectResults:
      description: The response from processing a dev inspect transaction
      type: object
      required:
        - effects
        - events
      properties:
        effects:
          description: Summary of effects that likely would be generated if the transaction is actually run. Note however, that not all dev-inspect transactions are actually usable as transactions so it might not be possible actually generate these effects from a normal transaction.
          $ref: '#/components/schemas/TransactionBlockEffects'
        error:
          type: string
          description: Execution error from executing the transactions
        events:
          type: array
          description: Events that likely would be generated if the transaction is actually run.
        rawEffects:
          type: array
          description: The raw effects of the transaction that was dev inspected.
        rawTxnData:
          type: array
          description: The raw transaction data of the transaction that was dev inspected.
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionBlockEffects'
          description: Execution results (including return values) from executing the transactions
    ObjectResponseError:
      oneOf:
        - type: object
          required:
            - code
            - object_id
          properties:
            code:
              type: string
              enum:
                - notExists
            object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - parent_object_id
          properties:
            code:
              type: string
              enum:
                - dynamicFieldNotFound
            parent_object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - digest
            - object_id
            - version
          properties:
            code:
              type: string
              enum:
                - deleted
            digest:
              description: Base64 string representing the object digest
              allOf:
                - $ref: '#/components/schemas/Digest'
            object_id:
              $ref: '#/components/schemas/ObjectID'
            version:
              description: Object version.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - unknown
        - type: object
          required:
            - code
            - error
          properties:
            code:
              type: string
              enum:
                - displayError
            error:
              type: string
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                description: JSON-RPC version
                example: '2.0'
              id:
                type: integer
                description: Request ID
                example: 1
              error:
                $ref: '#/components/schemas/ObjectResponseError'
            required:
              - jsonrpc
              - id
              - error
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
