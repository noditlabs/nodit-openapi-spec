openapi: 3.1.0
info:
  title: suix_getReferenceGasPrice
  version: 1.2.17
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        description: The network to use for the API.
        enum:
          - sui-mainnet
        default: sui-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - suix_getReferenceGasPrice
      description: |
        Return the reference gas price for the network
      summary: suix_getReferenceGasPrice
      operationId: sui-suix_getReferenceGasPrice
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: suix_getReferenceGasPrice
                params:
                  type: array
                  minItems: 0
                  maxItems: 0
              example:
                jsonrpc: '2.0'
                id: 1
                method: suix_getReferenceGasPrice
                params: []
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    $ref: '#/components/schemas/BigInt_for_uint64'
              example:
                jsonrpc: '2.0'
                result: 1000
                id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    BigInt_for_uint64:
      type: string
    Hex:
      description: Hex string encoding.
      type: string
    ObjectID:
      allOf:
        - $ref: '#/components/schemas/Hex'
    Base58:
      type: string
    Digest:
      allOf:
        - $ref: '#/components/schemas/Base58'
      description: A representation of a 32 byte digest
    ObjectResponseError:
      oneOf:
        - type: object
          required:
            - code
            - object_id
          properties:
            code:
              type: string
              enum:
                - notExists
            object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - parent_object_id
          properties:
            code:
              type: string
              enum:
                - dynamicFieldNotFound
            parent_object_id:
              $ref: '#/components/schemas/ObjectID'
        - type: object
          required:
            - code
            - digest
            - object_id
            - version
          properties:
            code:
              type: string
              enum:
                - deleted
            digest:
              description: Base64 string representing the object digest
              allOf:
                - $ref: '#/components/schemas/Digest'
            object_id:
              $ref: '#/components/schemas/ObjectID'
            version:
              description: Object version.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - unknown
        - type: object
          required:
            - code
            - error
          properties:
            code:
              type: string
              enum:
                - displayError
            error:
              type: string
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                description: JSON-RPC version
                example: '2.0'
              id:
                type: integer
                description: Request ID
                example: 1
              error:
                $ref: '#/components/schemas/ObjectResponseError'
            required:
              - jsonrpc
              - id
              - error
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
