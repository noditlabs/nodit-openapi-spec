openapi: 3.1.0
info:
  title: SUI Node API
  version: 1.2.10
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        description: The network to use for the API.
        enum:
          - sui-mainnet
        default: sui-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - suix_subscribeTransaction
      description: |
        Subscribe to a stream of Sui transaction effects
      summary: suix_subscribeTransaction
      operationId: suix_subscribeTransaction
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: suix_subscribeTransaction
                params:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    oneOf:
                      - title: filter
                        $ref: '#/components/schemas/TransactionFilter'
                        description: The filter criteria for the transaction stream
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                  id:
                    type: integer
                  result:
                    $ref: '#/components/schemas/TransactionBlockEffects'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    BigInt_for_uint64:
      type: string
    Hex:
      description: Hex string encoding.
      type: string
    ObjectID:
      allOf:
        - $ref: '#/components/schemas/Hex'
    SuiAddress:
      allOf:
        - $ref: '#/components/schemas/Hex'
    TransactionFilter:
      oneOf:
        - description: CURRENTLY NOT SUPPORTED. Query by checkpoint.
          type: object
          required:
            - Checkpoint
          properties:
            Checkpoint:
              $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
        - description: Query by move function.
          type: object
          required:
            - MoveFunction
          properties:
            MoveFunction:
              type: object
              required:
                - package
              properties:
                function:
                  type:
                    - string
                    - 'null'
                module:
                  type:
                    - string
                    - 'null'
                package:
                  $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - description: Query by input object.
          type: object
          required:
            - InputObject
          properties:
            InputObject:
              $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - description: Query by changed object, including created, mutated and unwrapped objects.
          type: object
          required:
            - ChangedObject
          properties:
            ChangedObject:
              $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - description: Query for transactions that touch this object.
          type: object
          required:
            - AffectedObject
          properties:
            AffectedObject:
              $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - description: Query by sender address.
          type: object
          required:
            - FromAddress
          properties:
            FromAddress:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Query by recipient address.
          type: object
          required:
            - ToAddress
          properties:
            ToAddress:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Query by sender and recipient address.
          type: object
          required:
            - FromAndToAddress
          properties:
            FromAndToAddress:
              type: object
              required:
                - from
                - to
              properties:
                from:
                  $ref: '#/components/schemas/SuiAddress'
                to:
                  $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: CURRENTLY NOT SUPPORTED. Query txs that have a given address as sender or recipient.
          type: object
          required:
            - FromOrToAddress
          properties:
            FromOrToAddress:
              type: object
              required:
                - addr
              properties:
                addr:
                  $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Query by transaction kind
          type: object
          required:
            - TransactionKind
          properties:
            TransactionKind:
              type: string
          additionalProperties: false
        - description: Query transactions of any given kind in the input.
          type: object
          required:
            - TransactionKindIn
          properties:
            TransactionKindIn:
              type: array
              items:
                type: string
          additionalProperties: false
    SuiMoveAbort:
      type: object
      properties:
        error_code:
          type:
            - integer
            - 'null'
          format: uint64
          minimum: 0
        function:
          type:
            - string
            - 'null'
        line:
          type:
            - integer
            - 'null'
          format: uint16
          minimum: 0
        module_id:
          type:
            - string
            - 'null'
    Owner:
      oneOf:
        - description: Object is exclusively owned by a single address, and is mutable.
          type: object
          required:
            - AddressOwner
          properties:
            AddressOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is exclusively owned by a single object, and is mutable. The object ID is converted to SuiAddress as SuiAddress is universal.
          type: object
          required:
            - ObjectOwner
          properties:
            ObjectOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is shared, can be used by any address, and is mutable.
          type: object
          required:
            - Shared
          properties:
            Shared:
              type: object
              required:
                - initial_shared_version
              properties:
                initial_shared_version:
                  description: The version at which the object became shared
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
        - description: Object is immutable, and hence ownership doesn't matter.
          type: string
          enum:
            - Immutable
        - description: Object is exclusively owned by a single address and sequenced via consensus.
          type: object
          required:
            - ConsensusAddressOwner
          properties:
            ConsensusAddressOwner:
              type: object
              required:
                - owner
                - start_version
              properties:
                owner:
                  $ref: '#/components/schemas/SuiAddress'
                start_version:
                  description: The version at which the object most recently became a consensus object. This serves the same function as `initial_shared_version`, except it may change if the object's Owner type changes.
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
    Base58:
      type: string
    Digest:
      allOf:
        - $ref: '#/components/schemas/Base58'
      description: A representation of a 32 byte digest
    SequenceNumber:
      type: integer
      format: uint64
      minimum: 0
    ObjectRef:
      type: object
      required:
        - digest
        - objectId
        - version
      properties:
        digest:
          description: Base64 string representing the object digest
          allOf:
            - $ref: '#/components/schemas/Digest'
        objectId:
          description: Hex code as string representing the object id
          allOf:
            - $ref: '#/components/schemas/ObjectID'
        version:
          description: Object version.
          allOf:
            - $ref: '#/components/schemas/SequenceNumber'
    OwnedObjectRef:
      type: object
      required:
        - owner
        - reference
      properties:
        owner:
          $ref: '#/components/schemas/Owner'
        reference:
          $ref: '#/components/schemas/ObjectRef'
    TransactionDigest:
      allOf:
        - $ref: '#/components/schemas/Digest'
      description: A transaction will have a (unique) digest.
    GasCostSummary:
      description: |
        Summary of the charges in a transaction. Storage is charged independently of computation. There are 3 parts to the storage charges:
        `storage_cost`: it is the charge of storage at the time the transaction is executed. The cost of storage is the number of bytes of the objects being mutated multiplied by a variable storage cost per byte
        `storage_rebate`: this is the amount a user gets back when manipulating an object. The `storage_rebate` is the `storage_cost` for an object minus fees.
        `non_refundable_storage_fee`: not all the value of the object storage cost is given back to user and there is a small fraction that is kept by the system. This value tracks that charge.

        When looking at a gas cost summary the amount charged to the user is `computation_cost + storage_cost - storage_rebate` and that is the amount that is deducted from the gas coins. `non_refundable_storage_fee` is collected from the objects being mutated/deleted and it is tracked by the system in storage funds.

        Objects deleted, including the older versions of objects mutated, have the storage field on the objects added up to a pool of "potential rebate". This rebate then is reduced by the "nonrefundable rate" such that: `potential_rebate(storage cost of deleted/mutated objects) = storage_rebate + non_refundable_storage_fee`
      type: object
      required:
        - computationCost
        - nonRefundableStorageFee
        - storageCost
        - storageRebate
      properties:
        computationCost:
          description: Cost of computation/execution
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        nonRefundableStorageFee:
          description: The fee for the rebate. The portion of the storage rebate kept by the system.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageCost:
          description: Storage cost, it's the sum of all storage cost for all objects created or mutated.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageRebate:
          description: The amount of storage cost refunded to the user for all objects deleted or mutated in the transaction.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
    TransactionBlockEffectsModifiedAtVersions:
      type: object
      required:
        - objectId
        - sequenceNumber
      properties:
        objectId:
          $ref: '#/components/schemas/ObjectID'
        sequenceNumber:
          $ref: '#/components/schemas/SequenceNumber'
    ExecutionStatus:
      oneOf:
        - type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - success
        - type: object
          required:
            - error
            - status
          properties:
            error:
              type: string
            status:
              type: string
              enum:
                - failure
    TransactionBlockEffects:
      oneOf:
        - description: The response from processing a transaction or a certified transaction
          type: object
          required:
            - executedEpoch
            - gasObject
            - gasUsed
            - messageVersion
            - status
            - transactionDigest
          properties:
            abortError:
              description: The abort error populated if the transaction failed with an abort code.
              $ref: '#/components/schemas/SuiMoveAbort'
            created:
              description: ObjectRef and owner of new objects created.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            deleted:
              description: Object Refs of objects now deleted (the old refs).
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            dependencies:
              description: The set of transaction digests this transaction depends on.
              type: array
              items:
                $ref: '#/components/schemas/TransactionDigest'
            eventsDigest:
              description: The digest of the events emitted during execution, can be None if the transaction does not emit any event.
              $ref: '#/components/schemas/Digest'
            executedEpoch:
              description: The epoch when this transaction was executed.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
            gasObject:
              description: The updated gas object reference. Have a dedicated field for convenient access. It's also included in mutated.
              allOf:
                - $ref: '#/components/schemas/OwnedObjectRef'
            gasUsed:
              $ref: '#/components/schemas/GasCostSummary'
            messageVersion:
              type: string
              enum:
                - v1
            modifiedAtVersions:
              description: The version that every modified (mutated or deleted) object had before it was modified by this transaction.
              type: array
              items:
                $ref: '#/components/schemas/TransactionBlockEffectsModifiedAtVersions'
            mutated:
              description: ObjectRef and owner of mutated objects, including gas object.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            sharedObjects:
              description: The object references of the shared objects used in this transaction. Empty if no shared objects were used.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            status:
              description: The status of the execution
              allOf:
                - $ref: '#/components/schemas/ExecutionStatus'
            transactionDigest:
              description: The transaction digest
              allOf:
                - $ref: '#/components/schemas/TransactionDigest'
            unwrapped:
              description: ObjectRef and owner of objects that are unwrapped in this transaction. Unwrapped objects are objects that were wrapped into other objects in the past, and just got extracted out.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            unwrappedThenDeleted:
              description: Object refs of objects previously wrapped in other objects but now deleted.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            wrapped:
              description: Object refs of objects now wrapped in other objects.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Unauthorized
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - notExists
                  object_id:
                    $ref: '#/components/schemas/ObjectID'
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - dynamic_field_not_found
                  parent_object_id:
                    $ref: '#/components/schemas/ObjectID'
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - deleted
                  digest:
                    $ref: '#/components/schemas/Digest'
                  object_id:
                    $ref: '#/components/schemas/ObjectID'
                  version:
                    $ref: '#/components/schemas/BigInt_for_uint64'
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - unknown
              - type: object
                required:
                  - code
                  - error
                properties:
                  code:
                    type: string
                    enum:
                      - displayError
                  error:
                    type: string
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
