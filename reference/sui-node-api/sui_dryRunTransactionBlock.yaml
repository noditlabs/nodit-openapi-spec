openapi: 3.1.0
info:
  title: SUI Node API
  version: 1.2.10
servers:
  - url: https://{sui-network}.nodit.io
    variables:
      sui-network:
        description: The network to use for the API.
        enum:
          - sui-mainnet
        default: sui-mainnet
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - sui_dryRunTransactionBlock
      description: |
        Return transaction execution effects including the gas cost summary, while the effects are not committed to the chain.
      summary: sui_dryRunTransactionBlock
      operationId: sui_dryRunTransactionBlock
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: sui_dryRunTransactionBlock
                params:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    oneOf:
                      - title: tx_bytes
                        $ref: '#/components/schemas/TransactionBlockBytes'
              example:
                jsonrpc: '2.0'
                id: 1
                method: sui_dryRunTransactionBlock
                params:
                  - AAACACB7qR3cfnF89wjJNwYPBASHNuwz+xdG2Zml5YzVxnftgAEAT4LxyFh7mNZMAL+0bDhDvYv2zPp8ZahhOGmM0f3Kw9wCAAAAAAAAACCxDABG4pPAjOwPQHg9msS/SrtNf4IGR/2F0ZGD3ufH/wEBAQEBAAEAAGH7tbTzQqQL2/h/5KlGueONGM+P/HsAALl1F1x7apV2AejYx86GPzE9o9vZKoPvJtEouI/ma/JuDg0Jza9yfR2EAgAAAAAAAAAgzMqpegLMOpgEFnDhYJ23FOmFjJbp5GmFXxzzv9+X6GVh+7W080KkC9v4f+SpRrnjjRjPj/x7AAC5dRdce2qVdgoAAAAAAAAAoIYBAAAAAAAA
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  jsonrpc:
                    type: string
                  result:
                    $ref: '#/components/schemas/DryRunTransactionBlockResponse'
              example:
                jsonrpc: '2.0'
                result:
                  digest: DNtx7EmGqSywGbnSC1CKoqmBFEXGvApXpRVt6bU855xP
                  transaction:
                    data:
                      messageVersion: v1
                      transaction:
                        kind: ProgrammableTransaction
                        inputs:
                          - type: pure
                            valueType: address
                            value: '0x7ba91ddc7e717cf708c937060f04048736ec33fb1746d999a5e58cd5c677ed80'
                          - type: object
                            objectType: immOrOwnedObject
                            objectId: '0x4f82f1c8587b98d64c00bfb46c3843bd8bf6ccfa7c65a86138698cd1fdcac3dc'
                            version: '2'
                            digest: Cv7n2YaM7Am1ssZGu4khsFkcKHnpgVhwFCSs4kLjrtLW
                        transactions:
                          - TransferObjects:
                              - - Input: 1
                              - Input: 0
                      sender: '0x61fbb5b4f342a40bdbf87fe4a946b9e38d18cf8ffc7b0000b975175c7b6a9576'
                      gasData:
                        payment:
                          - objectId: '0xe8d8c7ce863f313da3dbd92a83ef26d128b88fe66bf26e0e0d09cdaf727d1d84'
                            version: 2
                            digest: EnRQXe1hDGAJCFyF2ds2GmPHdvf9V6yxf24LisEsDkYt
                        owner: '0x61fbb5b4f342a40bdbf87fe4a946b9e38d18cf8ffc7b0000b975175c7b6a9576'
                        price: '10'
                        budget: '100000'
                    txSignatures:
                      - AG+AHZMT7BZWQVagaGfENXyiFQ2nYRkG4XdnwqwToeJEmZ4J1IxKw0xKzTATGiUzFedY/nxKVuHikFibNlZ3wg9Dij1TvBYKLcfLNo8fq6GASb9yfo6uvuwNUBGkTf54wQ==
                  rawTransaction: AQAAAAAAAgAge6kd3H5xfPcIyTcGDwQEhzbsM/sXRtmZpeWM1cZ37YABAE+C8chYe5jWTAC/tGw4Q72L9sz6fGWoYThpjNH9ysPcAgAAAAAAAAAgsQwARuKTwIzsD0B4PZrEv0q7TX+CBkf9hdGRg97nx/8BAQEBAQABAABh+7W080KkC9v4f+SpRrnjjRjPj/x7AAC5dRdce2qVdgHo2MfOhj8xPaPb2SqD7ybRKLiP5mvybg4NCc2vcn0dhAIAAAAAAAAAIMzKqXoCzDqYBBZw4WCdtxTphYyW6eRphV8c87/fl+hlYfu1tPNCpAvb+H/kqUa5440Yz4/8ewAAuXUXXHtqlXYKAAAAAAAAAKCGAQAAAAAAAAFhAG+AHZMT7BZWQVagaGfENXyiFQ2nYRkG4XdnwqwToeJEmZ4J1IxKw0xKzTATGiUzFedY/nxKVuHikFibNlZ3wg9Dij1TvBYKLcfLNo8fq6GASb9yfo6uvuwNUBGkTf54wQ==
                  effects:
                    messageVersion: v1
                    status:
                      status: success
                    executedEpoch: '0'
                    gasUsed:
                      computationCost: '100'
                      storageCost: '100'
                      storageRebate: '10'
                      nonRefundableStorageFee: '0'
                    transactionDigest: 8UExPV121BEfWkbymSPDYhh23rVNh3MSWtC5juJ9JGMJ
                    mutated:
                      - owner:
                          AddressOwner: '0x61fbb5b4f342a40bdbf87fe4a946b9e38d18cf8ffc7b0000b975175c7b6a9576'
                        reference:
                          objectId: '0xe8d8c7ce863f313da3dbd92a83ef26d128b88fe66bf26e0e0d09cdaf727d1d84'
                          version: 2
                          digest: EnRQXe1hDGAJCFyF2ds2GmPHdvf9V6yxf24LisEsDkYt
                      - owner:
                          AddressOwner: '0x7ba91ddc7e717cf708c937060f04048736ec33fb1746d999a5e58cd5c677ed80'
                        reference:
                          objectId: '0x4f82f1c8587b98d64c00bfb46c3843bd8bf6ccfa7c65a86138698cd1fdcac3dc'
                          version: 2
                          digest: Cv7n2YaM7Am1ssZGu4khsFkcKHnpgVhwFCSs4kLjrtLW
                    gasObject:
                      owner:
                        ObjectOwner: '0x61fbb5b4f342a40bdbf87fe4a946b9e38d18cf8ffc7b0000b975175c7b6a9576'
                      reference:
                        objectId: '0xe8d8c7ce863f313da3dbd92a83ef26d128b88fe66bf26e0e0d09cdaf727d1d84'
                        version: 2
                        digest: EnRQXe1hDGAJCFyF2ds2GmPHdvf9V6yxf24LisEsDkYt
                    eventsDigest: 55TNn3v5vpuXjQfjqamw76P9GZD522pumo4NuT7RYeFB
                  objectChanges:
                    - type: transferred
                      sender: '0x61fbb5b4f342a40bdbf87fe4a946b9e38d18cf8ffc7b0000b975175c7b6a9576'
                      recipient:
                        AddressOwner: '0x7ba91ddc7e717cf708c937060f04048736ec33fb1746d999a5e58cd5c677ed80'
                      objectType: 0x2::example::Object
                      objectId: '0x4f82f1c8587b98d64c00bfb46c3843bd8bf6ccfa7c65a86138698cd1fdcac3dc'
                      version: '2'
                      digest: B3xLC8EbyvTxy5pgiwTNUzHLa6kS7uwD6sZdErKB8F8f
                id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: The default value, `nodit-demo`, is only for use in the developer documentation. For real applications or services, use the API key obtained from the Nodit console.
  schemas:
    Base58:
      type: string
    Digest:
      allOf:
        - $ref: '#/components/schemas/Base58'
      description: A representation of a 32 byte digest
    Hex:
      description: Hex string encoding.
      type: string
    ObjectID:
      allOf:
        - $ref: '#/components/schemas/Hex'
    SequenceNumber:
      type: integer
      format: uint64
      minimum: 0
    ObjectRef:
      type: object
      required:
        - digest
        - objectId
        - version
      properties:
        digest:
          description: Base64 string representing the object digest
          allOf:
            - $ref: '#/components/schemas/Digest'
        objectId:
          description: Hex code as string representing the object id
          allOf:
            - $ref: '#/components/schemas/ObjectID'
        version:
          description: Object version.
          allOf:
            - $ref: '#/components/schemas/SequenceNumber'
    BigInt_for_uint64:
      type: string
    InputObjectKind:
      oneOf:
        - type: object
          required:
            - MovePackage
          properties:
            MovePackage:
              $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - type: object
          required:
            - ImmOrOwnedMoveObject
          properties:
            ImmOrOwnedMoveObject:
              $ref: '#/components/schemas/ObjectRef'
          additionalProperties: false
        - type: object
          required:
            - SharedMoveObject
          properties:
            SharedMoveObject:
              type: object
              required:
                - id
                - initial_shared_version
              properties:
                id:
                  $ref: '#/components/schemas/ObjectID'
                initial_shared_version:
                  $ref: '#/components/schemas/BigInt_for_uint64'
                mutable:
                  default: true
                  type: boolean
          additionalProperties: false
    Base64:
      description: Base64 encoding
      type: string
    TransactionBlockBytes:
      type: object
      required:
        - gas
        - inputObjects
        - txBytes
      properties:
        gas:
          description: the gas objects to be used
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        inputObjects:
          description: objects to be used in this transaction
          type: array
          items:
            $ref: '#/components/schemas/InputObjectKind'
        txBytes:
          description: BCS serialized transaction data bytes without its type tag, as base-64 encoded string.
          allOf:
            - $ref: '#/components/schemas/Base64'
    SuiAddress:
      allOf:
        - $ref: '#/components/schemas/Hex'
    Owner:
      oneOf:
        - description: Object is exclusively owned by a single address, and is mutable.
          type: object
          required:
            - AddressOwner
          properties:
            AddressOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is exclusively owned by a single object, and is mutable. The object ID is converted to SuiAddress as SuiAddress is universal.
          type: object
          required:
            - ObjectOwner
          properties:
            ObjectOwner:
              $ref: '#/components/schemas/SuiAddress'
          additionalProperties: false
        - description: Object is shared, can be used by any address, and is mutable.
          type: object
          required:
            - Shared
          properties:
            Shared:
              type: object
              required:
                - initial_shared_version
              properties:
                initial_shared_version:
                  description: The version at which the object became shared
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
        - description: Object is immutable, and hence ownership doesn't matter.
          type: string
          enum:
            - Immutable
        - description: Object is exclusively owned by a single address and sequenced via consensus.
          type: object
          required:
            - ConsensusAddressOwner
          properties:
            ConsensusAddressOwner:
              type: object
              required:
                - owner
                - start_version
              properties:
                owner:
                  $ref: '#/components/schemas/SuiAddress'
                start_version:
                  description: The version at which the object most recently became a consensus object. This serves the same function as `initial_shared_version`, except it may change if the object's Owner type changes.
                  allOf:
                    - $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
    BalanceChange:
      type: object
      required:
        - amount
        - coinType
        - owner
      properties:
        amount:
          description: The amount indicate the balance value changes, negative amount means spending coin value and positive means receiving coin value.
          type: string
        coinType:
          type: string
        owner:
          description: Owner of the balance change
          allOf:
            - $ref: '#/components/schemas/Owner'
    SuiMoveAbort:
      type: object
      properties:
        error_code:
          type:
            - integer
            - 'null'
          format: uint64
          minimum: 0
        function:
          type:
            - string
            - 'null'
        line:
          type:
            - integer
            - 'null'
          format: uint16
          minimum: 0
        module_id:
          type:
            - string
            - 'null'
    OwnedObjectRef:
      type: object
      required:
        - owner
        - reference
      properties:
        owner:
          $ref: '#/components/schemas/Owner'
        reference:
          $ref: '#/components/schemas/ObjectRef'
    TransactionDigest:
      allOf:
        - $ref: '#/components/schemas/Digest'
      description: A transaction will have a (unique) digest.
    GasCostSummary:
      description: |
        Summary of the charges in a transaction. Storage is charged independently of computation. There are 3 parts to the storage charges:
        `storage_cost`: it is the charge of storage at the time the transaction is executed. The cost of storage is the number of bytes of the objects being mutated multiplied by a variable storage cost per byte
        `storage_rebate`: this is the amount a user gets back when manipulating an object. The `storage_rebate` is the `storage_cost` for an object minus fees.
        `non_refundable_storage_fee`: not all the value of the object storage cost is given back to user and there is a small fraction that is kept by the system. This value tracks that charge.

        When looking at a gas cost summary the amount charged to the user is `computation_cost + storage_cost - storage_rebate` and that is the amount that is deducted from the gas coins. `non_refundable_storage_fee` is collected from the objects being mutated/deleted and it is tracked by the system in storage funds.

        Objects deleted, including the older versions of objects mutated, have the storage field on the objects added up to a pool of "potential rebate". This rebate then is reduced by the "nonrefundable rate" such that: `potential_rebate(storage cost of deleted/mutated objects) = storage_rebate + non_refundable_storage_fee`
      type: object
      required:
        - computationCost
        - nonRefundableStorageFee
        - storageCost
        - storageRebate
      properties:
        computationCost:
          description: Cost of computation/execution
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        nonRefundableStorageFee:
          description: The fee for the rebate. The portion of the storage rebate kept by the system.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageCost:
          description: Storage cost, it's the sum of all storage cost for all objects created or mutated.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
        storageRebate:
          description: The amount of storage cost refunded to the user for all objects deleted or mutated in the transaction.
          allOf:
            - $ref: '#/components/schemas/BigInt_for_uint64'
    TransactionBlockEffectsModifiedAtVersions:
      type: object
      required:
        - objectId
        - sequenceNumber
      properties:
        objectId:
          $ref: '#/components/schemas/ObjectID'
        sequenceNumber:
          $ref: '#/components/schemas/SequenceNumber'
    ExecutionStatus:
      oneOf:
        - type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - success
        - type: object
          required:
            - error
            - status
          properties:
            error:
              type: string
            status:
              type: string
              enum:
                - failure
    TransactionBlockEffects:
      oneOf:
        - description: The response from processing a transaction or a certified transaction
          type: object
          required:
            - executedEpoch
            - gasObject
            - gasUsed
            - messageVersion
            - status
            - transactionDigest
          properties:
            abortError:
              description: The abort error populated if the transaction failed with an abort code.
              $ref: '#/components/schemas/SuiMoveAbort'
            created:
              description: ObjectRef and owner of new objects created.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            deleted:
              description: Object Refs of objects now deleted (the old refs).
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            dependencies:
              description: The set of transaction digests this transaction depends on.
              type: array
              items:
                $ref: '#/components/schemas/TransactionDigest'
            eventsDigest:
              description: The digest of the events emitted during execution, can be None if the transaction does not emit any event.
              $ref: '#/components/schemas/Digest'
            executedEpoch:
              description: The epoch when this transaction was executed.
              allOf:
                - $ref: '#/components/schemas/BigInt_for_uint64'
            gasObject:
              description: The updated gas object reference. Have a dedicated field for convenient access. It's also included in mutated.
              allOf:
                - $ref: '#/components/schemas/OwnedObjectRef'
            gasUsed:
              $ref: '#/components/schemas/GasCostSummary'
            messageVersion:
              type: string
              enum:
                - v1
            modifiedAtVersions:
              description: The version that every modified (mutated or deleted) object had before it was modified by this transaction.
              type: array
              items:
                $ref: '#/components/schemas/TransactionBlockEffectsModifiedAtVersions'
            mutated:
              description: ObjectRef and owner of mutated objects, including gas object.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            sharedObjects:
              description: The object references of the shared objects used in this transaction. Empty if no shared objects were used.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            status:
              description: The status of the execution
              allOf:
                - $ref: '#/components/schemas/ExecutionStatus'
            transactionDigest:
              description: The transaction digest
              allOf:
                - $ref: '#/components/schemas/TransactionDigest'
            unwrapped:
              description: ObjectRef and owner of objects that are unwrapped in this transaction. Unwrapped objects are objects that were wrapped into other objects in the past, and just got extracted out.
              type: array
              items:
                $ref: '#/components/schemas/OwnedObjectRef'
            unwrappedThenDeleted:
              description: Object refs of objects previously wrapped in other objects but now deleted.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
            wrapped:
              description: Object refs of objects now wrapped in other objects.
              type: array
              items:
                $ref: '#/components/schemas/ObjectRef'
    EventID:
      description: Unique ID of a Sui Event, the ID is a combination of transaction digest and event seq number.
      type: object
      required:
        - eventSeq
        - txDigest
      properties:
        eventSeq:
          $ref: '#/components/schemas/BigInt_for_uint64'
        txDigest:
          $ref: '#/components/schemas/TransactionDigest'
    Event:
      type: object
      oneOf:
        - type: object
          required:
            - bcs
            - bcsEncoding
          properties:
            bcs:
              $ref: '#/components/schemas/Base64'
            bcsEncoding:
              type: string
              enum:
                - base64
        - type: object
          required:
            - bcs
            - bcsEncoding
          properties:
            bcs:
              $ref: '#/components/schemas/Base58'
            bcsEncoding:
              type: string
              enum:
                - base58
      required:
        - id
        - packageId
        - parsedJson
        - sender
        - transactionModule
        - type
      properties:
        id:
          description: Sequential event ID, ie (transaction seq number, event seq number). 1) Serves as a unique event ID for each fullnode 2) Also serves to sequence events for the purposes of pagination and querying. A higher id is an event seen later by that fullnode. This ID is the "cursor" for event querying.
          allOf:
            - $ref: '#/components/schemas/EventID'
        packageId:
          description: Move package where this event was emitted.
          allOf:
            - $ref: '#/components/schemas/ObjectID'
        parsedJson:
          description: Parsed json value of the event
        sender:
          description: Sender's Sui address.
          allOf:
            - $ref: '#/components/schemas/SuiAddress'
        timestampMs:
          $ref: '#/components/schemas/BigInt_for_uint64'
          description: UTC timestamp in milliseconds since epoch (1/1/1970)
        transactionModule:
          description: Move module where this event was emitted.
          type: string
        type:
          description: Move event type.
          type: string
    GasData:
      type: object
      required:
        - budget
        - owner
        - payment
        - price
      properties:
        budget:
          $ref: '#/components/schemas/BigInt_for_uint64'
        owner:
          $ref: '#/components/schemas/SuiAddress'
        payment:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        price:
          $ref: '#/components/schemas/BigInt_for_uint64'
    SuiJsonValue:
      type: object
    SuiCallArg:
      oneOf:
        - type: object
          oneOf:
            - type: object
              required:
                - digest
                - objectId
                - objectType
                - version
              properties:
                digest:
                  $ref: '#/components/schemas/Digest'
                objectId:
                  $ref: '#/components/schemas/ObjectID'
                objectType:
                  type: string
                  enum:
                    - immOrOwnedObject
                version:
                  $ref: '#/components/schemas/SequenceNumber'
            - type: object
              required:
                - initialSharedVersion
                - mutable
                - objectId
                - objectType
              properties:
                initialSharedVersion:
                  $ref: '#/components/schemas/SequenceNumber'
                mutable:
                  type: boolean
                objectId:
                  $ref: '#/components/schemas/ObjectID'
                objectType:
                  type: string
                  enum:
                    - sharedObject
            - type: object
              required:
                - digest
                - objectId
                - objectType
                - version
              properties:
                digest:
                  $ref: '#/components/schemas/Digest'
                objectId:
                  $ref: '#/components/schemas/ObjectID'
                objectType:
                  type: string
                  enum:
                    - receiving
                version:
                  $ref: '#/components/schemas/SequenceNumber'
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - object
        - type: object
          required:
            - type
            - value
          properties:
            type:
              type: string
              enum:
                - pure
            value:
              $ref: '#/components/schemas/SuiJsonValue'
            valueType:
              type:
                - string
                - 'null'
    SuiArgument:
      description: An argument to a transaction in a programmable transaction block
      oneOf:
        - description: The gas coin. The gas coin can only be used by-ref, except for with `TransferObjects`, which can use it by-value.
          type: string
          enum:
            - GasCoin
        - description: One of the input objects or primitive values (from `ProgrammableTransactionBlock` inputs)
          type: object
          required:
            - Input
          properties:
            Input:
              type: integer
              format: uint16
              minimum: 0
          additionalProperties: false
        - description: The result of another transaction (from `ProgrammableTransactionBlock` transactions)
          type: object
          required:
            - Result
          properties:
            Result:
              type: integer
              format: uint16
              minimum: 0
          additionalProperties: false
        - description: Like a `Result` but it accesses a nested result. Currently, the only usage of this is to access a value from a Move call with multiple return values.
          type: object
          required:
            - NestedResult
          properties:
            NestedResult:
              type: array
              items:
                type: integer
                format: uint16
              maxItems: 2
              minItems: 2
          additionalProperties: false
    SuiProgrammableMoveCall:
      description: The transaction for calling a Move function, either an entry function or a public function (which cannot return references).
      type: object
      required:
        - function
        - module
        - package
      properties:
        arguments:
          description: The arguments to the function.
          type: array
          items:
            $ref: '#/components/schemas/SuiArgument'
        function:
          description: The function to be called.
          type: string
        module:
          description: The specific module in the package containing the function.
          type: string
        package:
          description: The package containing the module and function.
          allOf:
            - $ref: '#/components/schemas/ObjectID'
        type_arguments:
          description: The type arguments to the function.
          type: array
          items:
            type: string
    SuiTransaction:
      description: A single transaction in a programmable transaction block.
      oneOf:
        - description: A call to either an entry or a public Move function
          type: object
          required:
            - MoveCall
          properties:
            MoveCall:
              $ref: '#/components/schemas/SuiProgrammableMoveCall'
          additionalProperties: false
        - description: (Vec<forall T:key+store. T>, address) It sends n-objects to the specified address. These objects must have store (public transfer) and either the previous owner must be an address or the object must be newly created.
          type: object
          required:
            - TransferObjects
          properties:
            TransferObjects:
              type: array
              items:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/SuiArgument'
                  - $ref: '#/components/schemas/SuiArgument'
              maxItems: 2
              minItems: 2
          additionalProperties: false
        - description: (&mut Coin<T>, Vec<u64>) -> Vec<Coin<T>> It splits off some amounts into a new coins with those amounts
          type: object
          required:
            - SplitCoins
          properties:
            SplitCoins:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/SuiArgument'
                  - type: array
                    items:
                      $ref: '#/components/schemas/SuiArgument'
              maxItems: 2
              minItems: 2
          additionalProperties: false
        - description: (&mut Coin<T>, Vec<Coin<T>>) It merges n-coins into the first coin
          type: object
          required:
            - MergeCoins
          properties:
            MergeCoins:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/SuiArgument'
                  - type: array
                    items:
                      $ref: '#/components/schemas/SuiArgument'
              maxItems: 2
              minItems: 2
          additionalProperties: false
        - description: Publishes a Move package. It takes the package bytes and a list of the package's transitive dependencies to link against on-chain.
          type: object
          required:
            - Publish
          properties:
            Publish:
              type: array
              items:
                $ref: '#/components/schemas/ObjectID'
          additionalProperties: false
        - description: Upgrades a Move package
          type: object
          required:
            - Upgrade
          properties:
            Upgrade:
              type: array
              items:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/ObjectID'
                  - $ref: '#/components/schemas/ObjectID'
                  - $ref: '#/components/schemas/SuiArgument'
              maxItems: 3
              minItems: 3
          additionalProperties: false
        - description: 'forall T: Vec<T> -> vector<T> Given n-values of the same type, it constructs a vector. For non objects or an empty vector, the type tag must be specified.'
          type: object
          required:
            - MakeMoveVec
          properties:
            MakeMoveVec:
              type: array
              items:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/SuiArgument'
                  - type: string
                    enum:
                      - 'null'
              maxItems: 2
              minItems: 2
          additionalProperties: false
    SuiJWK:
      type: object
      required:
        - alg
        - e
        - kty
        - 'n'
      properties:
        alg:
          type: string
        e:
          type: string
        kty:
          type: string
        'n':
          type: string
    SuiJwkId:
      type: object
      required:
        - iss
        - kid
      properties:
        iss:
          type: string
        kid:
          type: string
    SuiActiveJwk:
      type: object
      required:
        - epoch
        - jwk
        - jwk_id
      properties:
        epoch:
          $ref: '#/components/schemas/BigInt_for_uint64'
        jwk:
          $ref: '#/components/schemas/SuiJWK'
        jwk_id:
          $ref: '#/components/schemas/SuiJwkId'
    SuiChangeEpoch:
      type: object
      required:
        - computation_charge
        - epoch
        - epoch_start_timestamp_ms
        - storage_charge
        - storage_rebate
      properties:
        computation_charge:
          $ref: '#/components/schemas/BigInt_for_uint64'
        epoch:
          $ref: '#/components/schemas/BigInt_for_uint64'
        epoch_start_timestamp_ms:
          $ref: '#/components/schemas/BigInt_for_uint64'
        storage_charge:
          $ref: '#/components/schemas/BigInt_for_uint64'
        storage_rebate:
          $ref: '#/components/schemas/BigInt_for_uint64'
    SuiAuthenticatorStateExpire:
      type: object
      required:
        - min_epoch
      properties:
        min_epoch:
          $ref: '#/components/schemas/BigInt_for_uint64'
    CheckpointDigest:
      description: Representation of a Checkpoint's digest
      allOf:
        - $ref: '#/components/schemas/Digest'
    SuiEndOfEpochTransactionKind:
      oneOf:
        - type: string
          enum:
            - AuthenticatorStateCreate
            - RandomnessStateCreate
            - CoinDenyListStateCreate
            - StoreExecutionTimeObservations
            - AccumulatorRootCreate
        - type: object
          required:
            - ChangeEpoch
          properties:
            ChangeEpoch:
              $ref: '#/components/schemas/SuiChangeEpoch'
          additionalProperties: false
        - type: object
          required:
            - AuthenticatorStateExpire
          properties:
            AuthenticatorStateExpire:
              $ref: '#/components/schemas/SuiAuthenticatorStateExpire'
          additionalProperties: false
        - type: object
          required:
            - BridgeStateCreate
          properties:
            BridgeStateCreate:
              $ref: '#/components/schemas/CheckpointDigest'
          additionalProperties: false
        - type: object
          required:
            - BridgeCommitteeUpdate
          properties:
            BridgeCommitteeUpdate:
              $ref: '#/components/schemas/BigInt_for_uint64'
          additionalProperties: false
    ConsensusDeterminedVersionAssignments:
      description: Uses an enum to allow for future expansion of the ConsensusDeterminedVersionAssignments.
      oneOf:
        - type: object
          required:
            - CancelledTransactions
          properties:
            CancelledTransactions:
              type: array
        - type: object
          required:
            - CancelledTransactionsV2
          properties:
            CancelledTransactionsV2:
              type: array
    TransactionBlockKind:
      oneOf:
        - description: A system transaction that will update epoch information on-chain.
          type: object
          required:
            - computation_charge
            - epoch
            - epoch_start_timestamp_ms
            - kind
            - storage_charge
            - storage_rebate
          properties:
            computation_charge:
              $ref: '#/components/schemas/BigInt_for_uint64'
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            epoch_start_timestamp_ms:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - ChangeEpoch
            storage_charge:
              $ref: '#/components/schemas/BigInt_for_uint64'
            storage_rebate:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - description: A system transaction used for initializing the initial state of the chain.
          type: object
          required:
            - kind
            - objects
          properties:
            kind:
              type: string
              enum:
                - Genesis
            objects:
              type: array
              items:
                $ref: '#/components/schemas/ObjectID'
        - description: A system transaction marking the start of a series of transactions scheduled as part of a checkpoint
          type: object
          required:
            - commit_timestamp_ms
            - epoch
            - kind
            - round
          properties:
            commit_timestamp_ms:
              $ref: '#/components/schemas/BigInt_for_uint64'
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - ConsensusCommitPrologue
            round:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - description: A series of transactions where the results of one transaction can be used in future transactions
          type: object
          required:
            - inputs
            - kind
            - transactions
          properties:
            inputs:
              description: Input objects or primitive values
              type: array
              items:
                $ref: '#/components/schemas/SuiCallArg'
            kind:
              type: string
              enum:
                - ProgrammableTransaction
            transactions:
              description: The transactions to be executed sequentially. A failure in any transaction will result in the failure of the entire programmable transaction block.
              type: array
              items:
                $ref: '#/components/schemas/SuiTransaction'
        - description: A transaction which updates global authenticator state
          type: object
          required:
            - epoch
            - kind
            - new_active_jwks
            - round
          properties:
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - AuthenticatorStateUpdate
            new_active_jwks:
              type: array
              items:
                $ref: '#/components/schemas/SuiActiveJwk'
            round:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - description: A transaction which updates global randomness state
          type: object
          required:
            - epoch
            - kind
            - random_bytes
            - randomness_round
          properties:
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - RandomnessStateUpdate
            random_bytes:
              type: array
              items:
                type: integer
                format: uint8
                minimum: 0
            randomness_round:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - description: The transaction which occurs only at the end of the epoch
          type: object
          required:
            - kind
            - transactions
          properties:
            kind:
              type: string
              enum:
                - EndOfEpochTransaction
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/SuiEndOfEpochTransactionKind'
        - type: object
          required:
            - commit_timestamp_ms
            - consensus_commit_digest
            - epoch
            - kind
            - round
          properties:
            commit_timestamp_ms:
              $ref: '#/components/schemas/BigInt_for_uint64'
            consensus_commit_digest:
              $ref: '#/components/schemas/Digest'
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - ConsensusCommitPrologueV2
            round:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - commit_timestamp_ms
            - consensus_commit_digest
            - consensus_determined_version_assignments
            - epoch
            - kind
            - round
          properties:
            commit_timestamp_ms:
              $ref: '#/components/schemas/BigInt_for_uint64'
            consensus_commit_digest:
              $ref: '#/components/schemas/Digest'
            consensus_determined_version_assignments:
              $ref: '#/components/schemas/ConsensusDeterminedVersionAssignments'
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - ConsensusCommitPrologueV3
            round:
              $ref: '#/components/schemas/BigInt_for_uint64'
            sub_dag_index:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - type: object
          required:
            - additional_state_digest
            - commit_timestamp_ms
            - consensus_commit_digest
            - consensus_determined_version_assignments
            - epoch
            - kind
            - round
          properties:
            additional_state_digest:
              $ref: '#/components/schemas/Digest'
            commit_timestamp_ms:
              $ref: '#/components/schemas/BigInt_for_uint64'
            consensus_commit_digest:
              $ref: '#/components/schemas/Digest'
            consensus_determined_version_assignments:
              $ref: '#/components/schemas/ConsensusDeterminedVersionAssignments'
            epoch:
              $ref: '#/components/schemas/BigInt_for_uint64'
            kind:
              type: string
              enum:
                - ConsensusCommitPrologueV4
            round:
              $ref: '#/components/schemas/BigInt_for_uint64'
            sub_dag_index:
              $ref: '#/components/schemas/BigInt_for_uint64'
        - description: A series of commands where the results of one command can be used in future commands
          type: object
          required:
            - inputs
            - kind
            - transactions
          properties:
            inputs:
              description: Input objects or primitive values
              type: array
              items:
                $ref: '#/components/schemas/SuiCallArg'
            kind:
              type: string
              enum:
                - ProgrammableSystemTransaction
            transactions:
              description: The transactions to be executed sequentially. A failure in any transaction will result in the failure of the entire programmable transaction block.
              type: array
              items:
                $ref: '#/components/schemas/SuiTransaction'
    TransactionBlockData:
      oneOf:
        - type: object
          required:
            - gasData
            - messageVersion
            - sender
            - transaction
          properties:
            gasData:
              $ref: '#/components/schemas/GasData'
            messageVersion:
              type: string
              enum:
                - v1
            sender:
              $ref: '#/components/schemas/SuiAddress'
            transaction:
              $ref: '#/components/schemas/TransactionBlockKind'
    ObjectChange:
      description: ObjectChange are derived from the object mutations in the TransactionEffect to provide richer object information.
      oneOf:
        - description: Module published
          type: object
          required:
            - digest
            - modules
            - packageId
            - type
            - version
          properties:
            digest:
              $ref: '#/components/schemas/Digest'
            modules:
              type: array
              items:
                type: string
            packageId:
              $ref: '#/components/schemas/ObjectID'
            type:
              type: string
              enum:
                - published
            version:
              $ref: '#/components/schemas/SequenceNumber'
        - description: Transfer objects to new address / wrap in another object
          type: object
          required:
            - digest
            - objectId
            - objectType
            - recipient
            - sender
            - type
            - version
          properties:
            digest:
              $ref: '#/components/schemas/Digest'
            objectId:
              $ref: '#/components/schemas/ObjectID'
            objectType:
              type: string
            recipient:
              $ref: '#/components/schemas/Owner'
            sender:
              $ref: '#/components/schemas/SuiAddress'
            type:
              type: string
              enum:
                - transferred
            version:
              $ref: '#/components/schemas/SequenceNumber'
        - description: Object mutated.
          type: object
          required:
            - digest
            - objectId
            - objectType
            - owner
            - previousVersion
            - sender
            - type
            - version
          properties:
            digest:
              $ref: '#/components/schemas/Digest'
            objectId:
              $ref: '#/components/schemas/ObjectID'
            objectType:
              type: string
            owner:
              $ref: '#/components/schemas/Owner'
            previousVersion:
              $ref: '#/components/schemas/SequenceNumber'
            sender:
              $ref: '#/components/schemas/SuiAddress'
            type:
              type: string
              enum:
                - mutated
            version:
              $ref: '#/components/schemas/SequenceNumber'
        - description: Delete object
          type: object
          required:
            - objectId
            - objectType
            - sender
            - type
            - version
          properties:
            objectId:
              $ref: '#/components/schemas/ObjectID'
            objectType:
              type: string
            sender:
              $ref: '#/components/schemas/SuiAddress'
            type:
              type: string
              enum:
                - deleted
            version:
              $ref: '#/components/schemas/SequenceNumber'
        - description: Wrapped object
          type: object
          required:
            - objectId
            - objectType
            - sender
            - type
            - version
          properties:
            objectId:
              $ref: '#/components/schemas/ObjectID'
            objectType:
              type: string
            sender:
              $ref: '#/components/schemas/SuiAddress'
            type:
              type: string
              enum:
                - wrapped
            version:
              $ref: '#/components/schemas/SequenceNumber'
        - description: New object creation
          type: object
          required:
            - digest
            - objectId
            - objectType
            - owner
            - sender
            - type
            - version
          properties:
            digest:
              $ref: '#/components/schemas/Digest'
            objectId:
              $ref: '#/components/schemas/ObjectID'
            objectType:
              type: string
            owner:
              $ref: '#/components/schemas/Owner'
            sender:
              $ref: '#/components/schemas/SuiAddress'
            type:
              type: string
              enum:
                - created
            version:
              $ref: '#/components/schemas/SequenceNumber'
    DryRunTransactionBlockResponse:
      type: object
      required:
        - balanceChanges
        - effects
        - events
        - input
        - objectChanges
      properties:
        balanceChanges:
          type: array
          items:
            $ref: '#/components/schemas/BalanceChange'
        effects:
          $ref: '#/components/schemas/TransactionBlockEffects'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        executionErrorSource:
          type: string
        input:
          $ref: '#/components/schemas/TransactionBlockData'
        objectChanges:
          type: array
          items:
            $ref: '#/components/schemas/ObjectChange'
        suggestedGasPrice:
          $ref: '#/components/schemas/BigInt_for_uint64'
    Error:
      type: object
      properties:
        code:
          type: string
          description: Returns a code that identifies the situation where the error occurred.
        message:
          type: string
          description: Returns a detailed message explaining the cause of the error.
      required:
        - code
        - message
  responses:
    '400':
      description: Unauthorized
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - notExists
                  object_id:
                    $ref: '#/components/schemas/ObjectID'
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - dynamic_field_not_found
                  parent_object_id:
                    $ref: '#/components/schemas/ObjectID'
              - type: object
                properties:
                  code:
                    type: string
                    enum:
                      - deleted
                  digest:
                    $ref: '#/components/schemas/Digest'
                  object_id:
                    $ref: '#/components/schemas/ObjectID'
                  version:
                    $ref: '#/components/schemas/BigInt_for_uint64'
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - unknown
              - type: object
                required:
                  - code
                  - error
                properties:
                  code:
                    type: string
                    enum:
                      - displayError
                  error:
                    type: string
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: AUTHENTICATION_FAILED
              message: Authentication failed
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: PERMISSION_DENIED
              message: Permission denied
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: RESOURCE_NOT_FOUND
              message: 'Resource not found: { RESOURCE1_NAME = RESOURCE1_VALUE, RESOURCE2_NAME = RESOURCE2_VALUE, ... }'
    '429':
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            example:
              code: TOO_MANY_REQUESTS
              message: Too many requests
