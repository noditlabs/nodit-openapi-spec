openapi: 3.1.0
info:
  title: evm-ethereum-trace_get
  version: 1.2.16
servers:
  - url: https://{ethereum-network}.nodit.io
    variables:
      ethereum-network:
        default: ethereum-mainnet
        enum:
          - ethereum-mainnet
          - ethereum-sepolia
          - ethereum-hoodi
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: >-
        The default value, `nodit-demo`, is only for use in the developer
        documentation. For real applications or services, use the API key
        obtained from the Nodit console.
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - evm-ethereum-trace_get
      description: >-
        특정 트랜잭션의 실행 과정을 추적합니다. 이 메소드는 해당 트랜잭션이 실행되면서 발생한 모든 중요한 이벤트(예: 함수 호출, 가스
        소비량, 생성된 로그 등)에 대한 정보를 제공합니다.
      summary: trace_get
      operationId: trace_get
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: trace_get
                params:
                  type: array
                  items:
                    oneOf:
                      - title: Transaction Hash
                        type: string
                        pattern: ^0[xX][0-9a-fA-F]{64}
                        default: >-
                          0xda148d856aef6d77d0b76c90ef1091ffe77afe9ee9b1c6cc23f28f042f198bd8
                        description: >-
                          트랜잭션 해시는 트랜잭션의 고유 식별자입니다. 트랜잭션 해시는 64자리 16진수 문자열로
                          표현됩니다.
                      - title: Trace Index
                        type: array
                        items:
                          title: Transaction Index
                          type: string
                          pattern: ^0[xX][0-9a-fA-F]+$
                          default: '0x0'
                          description: >-
                            트랜잭션 인덱스는 블록 내 특정 트랜잭션의 순서를 나타내는 숫자입니다. 트랜잭션 인덱스는
                            16진수 문자열로 표현됩니다.
                        minItems: 1
                  minItems: 2
                  maxItems: 2
                  default:
                    - >-
                      0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3
                    - - '0x0'
                  description: |-
                    다음 파라미터들을 타입에 맞게 배열로 입력합니다.

                    1. `transaction hash` : 조회하고자 하는 트랜잭션 해시를 문자열 형식으로 입력합니다.
                    2. `index`: 조회하고자 하는 trace의 index를 배열의 형태로 입력합니다.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                jsonrpc: '2.0'
                id: 1
                result:
                  action:
                    from: '0x1c39ba39e4735cb65978d4db400ddd70a72dc750'
                    callType: call
                    gas: '0x13e99'
                    input: '0x16c72721'
                    to: '0x2bd2326c993dfaef84f696526064ff22eba5b362'
                    value: '0x0'
                  blockHash: >-
                    0x7eb25504e4c202cf3d62fd585d3e238f592c780cca82dacb2ed3cb5b38883add
                  blockNumber: 3068185
                  result:
                    gasUsed: '0x183'
                    output: >-
                      0x0000000000000000000000000000000000000000000000000000000000000001
                  subtraces: 0
                  traceAddress:
                    - 0
                  transactionHash: >-
                    0x17104ac9d3312d8c136b7f44d4b8b47852618065ebfa534bd2d3b5ef218ca1f3
                  transactionPosition: 2
                  type: call
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                    description: >-
                      These codes provide more granular error information beyond
                      just the HTTP status code of the response.


                      Allowed values: account_not_found, resource_not_found,
                      module_not_found, struct_field_not_found,
                      version_not_found, transaction_not_found,
                      table_item_not_found, block_not_found,
                      state_value_not_found, version_pruned, block_pruned,
                      invalid_input, invalid_transaction_update,
                      sequence_number_too_old, vm_error, health_check_failed,
                      mempool_is_full, internal_error, web_framework_error,
                      bcs_not_supported, api_disabled
                  vm_error_code:
                    type: integer
                    description: >-
                      A code providing VM error details when submitting
                      transactions to the VM.
