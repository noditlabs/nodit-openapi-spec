openapi: 3.1.0
info:
  title: evm-base-eth_getFilterChanges
  version: 1.2.16
servers:
  - url: https://{base-network}.nodit.io
    variables:
      base-network:
        default: base-mainnet
        enum:
          - base-mainnet
          - base-sepolia
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
      x-default: nodit-demo
      description: >-
        The default value, `nodit-demo`, is only for use in the developer
        documentation. For real applications or services, use the API key
        obtained from the Nodit console.
paths:
  /:
    post:
      security:
        - api_key: []
      tags:
        - evm-base-eth_getFilterChanges
      description: >-
        필터 ID를 입력하여 필터 결과를 조회합니다. eth_newFilter, eth_newBlockFilter,
        eth_newPendingTransactionFilter 메서드를 통해 생성된 필터 ID를 입력합니다.
      summary: eth_getFilterChanges
      operationId: base-eth_getFilterChanges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - jsonrpc
                - method
                - params
              properties:
                id:
                  type: integer
                  default: 1
                jsonrpc:
                  type: string
                  default: '2.0'
                method:
                  type: string
                  default: eth_getFilterChanges
                params:
                  type: array
                  items:
                    oneOf:
                      - title: Filter ID
                        type: string
                        pattern: ^0[xX][0-9a-fA-F]{32}
                        default: '0xaf35d60b70eb3b54018456a0d365ea49'
                        description: >-
                          필터 ID는 필터를 생성할 때 반환되는 고유 식별자입니다. 필터 ID는 16진수 문자열로
                          표현됩니다.
                  minItems: 1
                  maxItems: 1
                  default:
                    - '0xaf35d60b70eb3b54018456a0d365ea49'
                  description: |-
                    다음 파라미터들을 타입에 맞게 배열로 입력합니다.
                    1. `filter ID`: 미리 생성한 필터 ID를 입력합니다.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                jsonrpc: '2.0'
                id: 1
                result:
                  - address: '0xa3e0dfbf8dbd86e039f7cdb37682a776d66dae4b'
                    topics:
                      - >-
                        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
                      - >-
                        0x000000000000000000000000a03167de1a56160e4647d77d81e9139af55b63d4
                      - >-
                        0x00000000000000000000000038701e5945f578ccc8d0477d9a465254e9e95a09
                    data: >-
                      0x000000000000000000000000000000000000000000000000000000000001d4c0
                    blockNumber: '0x9e5983'
                    transactionHash: >-
                      0x987afc31410fe56a5b6c38a75b7338e1cd8eea5a11f626f2f6a5deeb764a64f9
                    transactionIndex: '0xf'
                    blockHash: >-
                      0x7f1df48cad828de085f8e61235a184ac107b8a730691846fcc0acb74599743b9
                    logIndex: '0x28'
                    removed: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - error_code
                properties:
                  message:
                    type: string
                  error_code:
                    type: string
                    description: >-
                      These codes provide more granular error information beyond
                      just the HTTP status code of the response.


                      Allowed values: account_not_found, resource_not_found,
                      module_not_found, struct_field_not_found,
                      version_not_found, transaction_not_found,
                      table_item_not_found, block_not_found,
                      state_value_not_found, version_pruned, block_pruned,
                      invalid_input, invalid_transaction_update,
                      sequence_number_too_old, vm_error, health_check_failed,
                      mempool_is_full, internal_error, web_framework_error,
                      bcs_not_supported, api_disabled
                  vm_error_code:
                    type: integer
                    description: >-
                      A code providing VM error details when submitting
                      transactions to the VM.
